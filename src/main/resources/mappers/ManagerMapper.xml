<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onestack.project.mapper.ManagerMapper">
	<resultMap id="MemberResultMap" type="com.onestack.project.domain.Member">
        <id property="memberNo" column="member_no" />
		<result property="name" column="name" />
		<result property="memberId" column="member_id" />
		<result property="kakaoId" column="kakao_id" />
		<result property="pass" column="pass" />
		<result property="nickname" column="nickname" />
		<result property="birth" column="birth" />
		<result property="gender" column="gender" />
		<result property="zipcode" column="zipcode" />
		<result property="address" column="address" />
		<result property="address2" column="address2" />
		<result property="email" column="email" />
		<result property="emailGet" column="email_get" />
		<result property="phone" column="phone" />
		<result property="memberRegDate" column="member_reg_date" />
		<result property="memberType" column="member_type" />
		<result property="memberStatus" column="member_status" />
		<result property="memberImage" column="member_image" />
		<result property="stack" column="stack" />
		<result property="stackName" column="stack_name" />
		<result property="withdrawalEndDate" column="withdrawal_end_date" />
		<result property="banEndDate" column="ban_end_date" />
		<result property="reportedCount" column="reported_count" />
		<result property="isSocial" column="is_social" />
		<result property="socialType" column="social_type" />
    </resultMap>

	<resultMap id="ProfessionalResultMap" type="com.onestack.project.domain.Professional">
        <id property="proNo" column="pro_no" />
        <result property="memberNo" column="member_no" />
        <result property="categoryNo" column="category_no" />
        <result property="selfIntroduction" column="self_introduction" />
        <result property="career" column="career" />
        <result property="awardCareer" column="award_career" />
        <result property="studentCount" column="student_count" />
        <result property="rate" column="rate" />
        <result property="professorStatus" column="professor_status" />
        <result property="screeningMsg" column="screening_msg" />
        <result property="proDate" column="pro_date" />
		<result property="contactableTime" column="contactable_time" />
		<result property="averagePrice" column="average_price" />
		<result property="reviewCount" column="review_count" />
    </resultMap>
    
    <resultMap id="PortfolioResultMap" type="com.onestack.project.domain.Portfolio">
        <id property="portfolioNo" column="portfolio_no" />
        <result property="proNo" column="pro_no" />
        <result property="proAdvancedNo" column="pro_advanced_no" />
        <result property="portfolioTitle" column="portfolio_title" />
        <result property="portfolioContent" column="portfolio_content" />
        <result property="visibility" column="visibility" />
        <result property="thumbnailImage" column="thumbnail_image" />
        <result property="portfolioFile1" column="portfolio_file1" />
        <result property="portfolioFile2" column="portfolio_file2" />
        <result property="portfolioFile3" column="portfolio_file3" />
        <result property="portfolioFile4" column="portfolio_file4" />
        <result property="portfolioFile5" column="portfolio_file5" />
        <result property="portfolioFile6" column="portfolio_file6" />
        <result property="portfolioFile7" column="portfolio_file7" />
        <result property="portfolioFile8" column="portfolio_file8" />
        <result property="portfolioFile9" column="portfolio_file9" />
        <result property="portfolioFile10" column="portfolio_file10" />
    </resultMap>


    <resultMap id="CategoryResultMap" type="com.onestack.project.domain.Category">
        <id property="itemNo" column="item_no" />
        <result property="itemTitle" column="item_title" />
        <result property="categoryNo" column="category_no" />
    </resultMap>
      
      
            
            
	<resultMap id="ProPortfolioResultMap" type="com.onestack.project.domain.ProPortfolio">
        <association property="professional" resultMap="ProfessionalResultMap" />
        <association property="portfolio" resultMap="PortfolioResultMap" />
    </resultMap>
    
    <resultMap id="MemProPortCateResultMap" type="com.onestack.project.domain.MemProPortCate">
        <association property="member" resultMap="MemberResultMap" />
        <association property="professional" resultMap="ProfessionalResultMap" />
        <association property="portfolio" resultMap="PortfolioResultMap" />
        <association property="category" resultMap="CategoryResultMap" />        
    </resultMap>
    
<select id="getAllMember" resultType="Member">
	SELECT * 
	FROM Member 
	WHERE member_type != 2  <!-- 탈퇴회원 제외 -->
   	ORDER BY member_reg_date DESC
</select>


<!-- 회원 조회 -->
<select id = "getMember" parameterType = "int" resultType = "Member">
   SELECT * 
   FROM Member 
   WHERE member_no = #{memberNo}
</select>

<!-- 회원 수 조회  -->


<!-- 탈퇴 회원 조회 -->
<select id = "getWithdrawalMember" resultType = "Member">
   SELECT * 
   FROM Member 
   WHERE member_type = 2
</select>

<!-- 정지 회원 조회 -->
<select id = "getBanMember" resultType = "Member">
   SELECT * 
   FROM Member 
   WHERE member_type = 3
</select>

<!-- 회원 정지 -->
<update id = "banMember" parameterType = "map">
	Update Member
	SET member_type = 3,
		ban_end_date = #{date}
	WHERE member_no = #{memberNo}
</update>

<!-- 회원의 모든 커뮤니티 게시글 비활성화 처리 -->
<update id="disactivateCommunity" parameterType="int">
	UPDATE Community
	SET community_board_activation = 0
	WHERE member_no = #{memberNo}
</update>

<!-- 회원의 모든 커뮤니티 댓글 비활성화 처리 -->
<update id="disctivateCommunityReply" parameterType="int">
	UPDATE CommunityReply
	SET community_reply_activation = 0
	WHERE member_no = #{memberNo}
</update>

<!-- 회원의 모든 QnA 게시글 비활성화 처리 -->
<update id="disctivateQnA" parameterType="int">
	UPDATE QnA
	SET qna_board_activation = 0
	WHERE member_no = #{memberNo}
</update>

<!-- 회원의 모든 QnA 댓글 비활성화 처리 -->
<update id="disctivateQnAReply" parameterType="int">
	UPDATE QnAReply
	SET qna_reply_activation = 0
	WHERE member_no = #{memberNo}
</update>

<!-- 회원 정지 해제 -->
<update id = "unbanMember" parameterType = "int">
	UPDATE Member
	SET member_type = 0,
		ban_end_date = NULL
	WHERE member_no = #{memberNo}
</update>






<!-- 전문가 심사 처리 -->
<update id="updateProStatus" parameterType="map">
    UPDATE Professional 
    SET professor_status = #{professorStatus}, screening_msg = #{screeningMsg}
    WHERE pro_no = #{proNo}
</update>

<!-- 회원, 전문가, 포트폴리오, 카테고리 -->
<select id = "getMemProPortCate" parameterType = "int" resultMap = "MemProPortCateResultMap">
	SELECT m.*, p.*, pf.*, c.*
	FROM Member m JOIN Professional p
			ON m.member_no = p.member_no
		JOIN Portfolio pf
			ON p.pro_no = pf.pro_no
		JOIN Category c
			ON p.item_no = c.item_no
    ORDER BY p.pro_date DESC
</select>






<!-- 신고 내역 조회 -->
<select id = "getReports" resultType = "Reports">
	SELECT *
	FROM Reports
	<where>	
		<if test = "type == 'before'">
			reports_status = 0
		</if>
		<if test = "type == 'after'">
			reports_status = 1
		</if>
	</where>
</select>

<!-- 신고 처리 전환 -->
<update id = "updateReportsStatus" parameterType ="map">
	UPDATE Reports
	SET reports_status = #{status}
	WHERE reports_no = #{reportsNo}
</update>


<!-- 비활성화인 커뮤니티 조회 -->
<select id = "getDisactivedCommunity" resultType = "Community">
	SELECT *
	FROM Community
	WHERE community_board_activation = 0
</select>

<!-- 비활성화인 커뮤니티 댓글 조회 -->
<select id = "getDisactivedCommunityReply" resultType = "CommunityReply">
	SELECT *
	FROM CommunityReply
	WHERE community_reply_activation = 0
</select>

<!-- 비활성화인 QnA 조회 -->
<select id = "getDisactivedQnA" resultType = "QnA">
	SELECT *
	FROM QnA
	WHERE qna_board_activation = 0
</select>

<!-- 비활성화인 QnA 댓글 조회 -->
<select id = "getDisactivedQnAReply" resultType = "QnAReply">
	SELECT *
	FROM QnAReply
	WHERE qna_reply_activation = 0
</select>

<!-- 비활성화인 리뷰 조회 -->
<select id = "getDisactivedReview" resultType = "Review">
	SELECT *
	FROM Review
	WHERE review_activation = 0
</select>


<!-- 커뮤니티 활성화/비활성화 -->
<update id = "updateCommunityActivation" parameterType ="map">
	UPDATE Community
	SET community_board_activation = #{status}
	WHERE community_board_no = #{communityBoardNo}
</update>

<!-- 커뮤니티 댓글 활성화/비활성화 -->
<update id = "updateCommunityReplyActivation" parameterType ="map">
	UPDATE CommunityReply
	SET community_reply_activation = #{status}
	WHERE community_reply_no = #{communityReplyNo}
</update>

<!-- QnA 활성화/비활성화 -->
<update id = "updateQnAActivation" parameterType ="map">
	UPDATE QnA
	SET qna_board_activation = #{status}
	WHERE qna_board_no = #{qnaBoardNo}
</update>

<!-- QnA 댓글 활성화/비활성화 -->
<update id = "updateQnAReplyActivation" parameterType ="map">
	UPDATE QnAReply
	SET qna_reply_activation = #{status}
	WHERE qna_reply_no = #{qnaReplyNo}
</update>

<!-- 리뷰 활성화/비활성화 -->
<update id = "updateReviewActivation" parameterType ="map">
	UPDATE Review
	SET review_activation = #{status}
	WHERE review_no = #{reviewNo}
</update>




<!-- 신고 -->
<insert id = "reports" parameterType = "Reports" useGeneratedKeys = "true" keyProperty = "reportsNo">
	INSERT INTO REPORTS(member_no, reports_type, reports_target, reports_reason)
	VALUES (#{memberNo}, #{reportsType}, #{reportsTarget}, #{reportsReason})
</insert>

<!-- 신고 횟수 증가 -->
<select id = "incrementReportedCount" parameterType = "int">
	UPDATE Member
	SET reported_count = reported_count + 1
	WHERE member_no = #{memberNo}
</select>






<!-- 카테고리/종목 조회 -->
<select id = "getCategory" resultType = "Category">
	SELECT *
	FROM Category
</select>

<!-- 카테고리/종목 추가 -->
<insert id = "addCategory" parameterType = "Category" useGeneratedKeys = "true" keyProperty = "itemNo">
	INSERT INTO Category(item_no, item_title, category_no)
	VALUES (#{itemNo}, #{itemTitle}, #{categoryNo})
</insert>

<!-- 카테고리/종목 수정 -->
<update id = "updateCategory" parameterType = "Category">
	UPDATE Category
	SET item_title = #{itemTitle}, category_no = #{categoryNo}
	WHERE item_no = #{itemNo}
</update>

<!-- 카테고리/종목 삭제 -->
<delete id = "deleteCategory" parameterType = "int">
	DELETE FROM Category
	WHERE item_no = #{itemNo}
</delete>


</mapper>