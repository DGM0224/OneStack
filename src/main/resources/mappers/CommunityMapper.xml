<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onestack.project.mapper.CommunityMapper">
	<resultMap id="CommunityResultMap" type="com.onestack.project.domain.Community">
		<id property="communityBoardNo" column="community_board_no" />
		<result property="memberNo" column="member_no" />
		<result property="communityBoardTitle" column="community_board_title" />
		<result property="communityBoardContent" column="community_board_content" />
		<result property="communityBoardRegDate" column="community_board_reg_date" />
		<result property="communityView" column="community_view" />
		<result property="communityFile" column="community_file" />
		<result property="communityBoardLike" column="community_board_like" />
		<result property="communityBoardDislike" column="community_board_dislike" />
		<result property="communityBoardActivation" column="community_board_activation" />
		<result property="communityReplyCount" column="community_reply_count" />
	</resultMap>


	<!-- 댓글 수 조회-->
	<select id="replyCount" resultType="int">
		SELECT COUNT(*)
		FROM CommunityReply
		WHERE community_board_no = #{communityBoardNo}
	</select>


	<!-- 회원의 추천 이력 조회 -->
	<select id="getMemberRecommendType" resultType="String">
		SELECT recommend_type
		FROM CommunityRecommend
		WHERE community_board_no = #{communityBoardNo}
		  AND member_no = #{memberNo}
	</select>

	<!-- 좋아요 증가 -->
	<update id="increaseLike">
		UPDATE Community
		SET community_board_like = community_board_like + 1
		WHERE community_board_no = #{communityBoardNo}
	</update>

	<!-- 좋아요 감소 -->
	<update id="decreaseLike">
		UPDATE Community
		SET community_board_like = GREATEST(community_board_like - 1, 0)
		WHERE community_board_no = #{communityBoardNo}
	</update>

	<!-- 싫어요 증가 -->
	<update id="increaseDislike">
		UPDATE Community
		SET community_board_dislike = community_board_dislike + 1
		WHERE community_board_no = #{communityBoardNo}
	</update>

	<!-- 싫어요 감소 -->
	<update id="decreaseDislike">
		UPDATE Community
		SET community_board_dislike = GREATEST(community_board_dislike - 1, 0)
		WHERE community_board_no = #{communityBoardNo}
	</update>

	<!-- 추천 이력 추가 -->
	<insert id="insertRecommend">
		INSERT INTO CommunityRecommend (community_board_no, member_no, recommend_type)
		VALUES (#{communityBoardNo}, #{memberNo}, #{recommendType})
	</insert>

	<!-- 추천 이력 삭제 -->
	<delete id="deleteRecommend">
		DELETE FROM CommunityRecommend
		WHERE community_board_no = #{communityBoardNo}
		  AND member_no = #{memberNo}
	</delete>



	<insert id="insertCommunityReply" parameterType="CommunityReply">
		INSERT INTO CommunityReply (community_board_no, member_no, community_reply_content, community_reply_reg_date)
		VALUES (#{communityBoardNo}, #{memberNo}, #{communityReplyContent}, SYSDATE())
	</insert>

	<update id="updateCommunityReply" parameterType="CommunityReply">
		UPDATE CommunityReply
		SET community_reply_content = #{communityReplyContent}
		WHERE community_reply_no = #{communityReplyNo}
		  AND member_no = #{memberNo}
	</update>

	<delete id="deleteCommunityReply">
		DELETE FROM CommunityReply
		WHERE community_reply_no = #{communityReplyNo} AND member_no = #{memberNo}
	</delete>

	<select id="getCommunityReplies" resultType="CommunityReply">
		SELECT cr.*, m.*
		FROM CommunityReply cr
				 JOIN Member m ON cr.member_no = m.member_no
		WHERE cr.community_board_no = #{communityBoardNo}
		ORDER BY cr.community_reply_reg_date DESC
	</select>


	<!-- 댓글 목록 조회 (작성자 닉네임 포함) -->
	<select id="getCommunityAll" resultType="Community">
		SELECT
			cr.community_reply_no,
			cr.community_board_no,
			cr.member_no,
			cr.community_reply_content,
			cr.community_reply_reg_date,
			m.nickname,
			m.member_stop
		FROM CommunityReply cr
				 LEFT JOIN Member m ON cr.member_no = m.member_no
		WHERE cr.community_board_no = #{communityBoardNo}
		ORDER BY cr.community_reply_reg_date DESC
	</select>

	<!-- 게시글 목록 조회 (작성자 닉네임 포함) -->
	<select id="communityList" parameterType="map" resultType="Community">
		SELECT
		c.*,
		m.nickname,
		m.member_stop,
		(SELECT COUNT(*) FROM CommunityReply cr WHERE cr.community_board_no = c.community_board_no) as community_reply_count
		FROM Community c
		LEFT JOIN Member m ON c.member_no = m.member_no
		<where>
			<if test="type == 'communityBoardTitle' and keyword != null and keyword != ''">
				c.community_board_title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'communityBoardContent' and keyword != null and keyword != ''">
				c.community_board_content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'nickname' and keyword != null and keyword != ''">
				m.nickname LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
		<choose>
			<when test="order == 'latest'">
				ORDER BY c.community_board_reg_date DESC
			</when>
			<when test="order == 'recommend'">
				ORDER BY (c.community_board_like - c.community_board_dislike) DESC,
				c.community_board_reg_date DESC
			</when>
			<otherwise>
				ORDER BY c.community_board_reg_date DESC
			</otherwise>
		</choose>
		LIMIT #{startRow}, #{num}
	</select>

	<select id="getCommunityCount" resultType="int">
		SELECT COUNT(*)
		FROM Community
		<where>
			<if test="type == 'communityBoardTitle' and keyword != null and keyword != ''">
				community_board_title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'communityBoardContent' and keyword != null and keyword != ''">
				community_board_content LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>

	<!-- 게시글 읽은 횟수 증가 -->
	<update id="incrementReadCount">
		UPDATE Community
		SET community_view = community_view + 1
		WHERE community_board_no = #{communityBoardNo}
		  AND member_no != #{memberNo}
	</update>

	<!-- 게시글 상세 조회 (작성자 닉네임 포함) -->
	<select id="getCommunity" resultType="Community">
		SELECT
			c.*,
			m.nickname,
			m.member_stop,
			(SELECT COUNT(*) FROM CommunityReply cr WHERE cr.community_board_no = c.community_board_no) as community_reply_count
		FROM Community c
				 LEFT JOIN Member m ON c.member_no = m.member_no
		WHERE c.community_board_no = #{communityBoardNo}
	</select>

	<!-- 자유게시판 작성하기 -->
	<insert id="insertCommunity" parameterType="Community" useGeneratedKeys="true" keyProperty="communityBoardNo">
		INSERT INTO Community(member_no, community_board_title, community_board_content,
							  community_board_reg_date, community_file)
		VALUES(#{memberNo}, #{communityBoardTitle}, #{communityBoardContent},
			   SYSDATE(), #{communityFile})
	</insert>

	<!-- 자유게시판 수정하기 -->
	<update id="updateCommunity" parameterType="Community">
		UPDATE Community
		SET community_board_title = #{communityBoardTitle},
			community_board_content = #{communityBoardContent},
			community_board_reg_date = SYSDATE()
		WHERE community_board_no = #{communityBoardNo}
		  AND member_no = #{memberNo}
	</update>

	<!-- 자유게시판 삭제하기 -->
	<delete id="deleteCommunity">
		DELETE FROM Community
		WHERE community_board_no = #{communityBoardNo} AND member_no = #{memberNo}
	</delete>


	<!-- 커뮤니티 게시글 수 조회 -->
	<select id = "getCommunityBoardCount" parameterType = "map" resultType ="int">
		SELECT COUNT(community_board_no)
		FROM Community c JOIN Member m
		ON c.member_no = m.member_no
		<where>
			<if test = "type == 'title'">
				c.community_board_title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test = "type == 'memberNickname'">
				m.nickname LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test = "type == 'content'">
				c.community_board_content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test = "type == 'date'">
				c.community_board_reg_date BETWEEN #{date1} AND #{date2}
			</if>
		</where>
	</select>

	<!-- 커뮤니티 추가 -->
	<insert id = "addCommunity" parameterType = "Community" useGeneratedKeys = "true" keyProperty = "communityBoardNo">
		INSERT INTO Community(member_no, community_board_title, community_board_content, community_file)
		VALUES (#{memberNo}, #{communityBoardTitle}, #{communityBoardContent}, #{communityFile})
	</insert>


	<!-- 커뮤니티 좋아요/싫어요 -->
	<update id = "updateCommunityRecommend" parameterType = "int">
		UPDATE Community
		SET
		<if test = "communityRecommend == 'like'">
			community_board_like = community_board_like + 1
		</if>
		<if test = "communityRecommend == 'dislike'">
			community_board_dislike = community_board_dislike + 1
		</if>
		WHERE community_board_no = #{communityBoardNo}
	</update>

	<!-- 커뮤니티 조회수 증가 -->
	<update id = "incrementCommunityReadCount" parameterType = "int">
		UPDATE Community
		SET community_view = community_view + 1
		WHERE community_board_no = #{communityBoardNo}
	</update>


	<!-- 커뮤니티 댓글 추가 -->
	<insert id = "addCommunityReply" parameterType = "CommunityReply" useGeneratedKeys = "true" keyProperty = "communityReplyNo">
		INSERT INTO CommunityReply(community_board_no, member_no, community_reply_content)
		VALUES(#{communityBoardNo}, #{memberNo}, #{communityReplyContent})
	</insert>

	<!-- 커뮤니티 게시글 상세 조회 -->
	<select id="getCommunityDetail" parameterType="int" resultType="Community">
		SELECT
		c.*,
		m.member_nickname,
		m.member_image,
		(SELECT COUNT(*) FROM community_reply WHERE community_board_id = c.community_board_id) as reply_count,
		c.community_board_content as raw_content,
		c.community_board_content_html as html_content  <!-- HTML 변환된 내용 추가 -->
		FROM
		community c
		LEFT JOIN member m ON c.member_no = m.member_no
		WHERE
		c.community_board_no = #{communityBoardNo}
	</select>

</mapper>